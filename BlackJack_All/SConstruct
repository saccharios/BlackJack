#!python
import os

# build with `scons --debug_build` for debug.
AddOption(
    '--debug_build',
    action='store_true',
    help='debug build',
    default=False)

env = Environment(ENV = os.environ, tools = ['mingw'])
path = ['C:\\MinGW_63\\bin']
env.PrependENVPath('PATH', path)
env.Append(CXXFLAGS='--std=c++17') 



env.Append(CCCOMSTR = "Compiling $TARGET",
           LINKCOMSTR = "Linking $TARGET")


build_dir = 'build'
if GetOption('debug_build'):
    env.ParseFlags('-DDEBUG')
    mode = 'debug'
else:
    mode = 'release'


target_name = 'Black_Jack_lib'
libpath = build_dir + '/' + target_name + '_'+mode 
SConscript(target_name +'/SConscript', variant_dir=libpath, duplicate=False, exports=['env','target_name'])
 
env.Append(LIBPATH=['E:\\Code\\BlackJack_Repo\\BlackJack_All\\build\\Black_Jack_lib_release'])
env.Append(LIBS=[target_name]) 

target_name = 'Console_Game'    
variant_dir = build_dir + '/' + target_name + '_'+mode 
  
SConscript(target_name +'/SConscript', variant_dir=variant_dir, duplicate=False, exports=['env','target_name'])


# project = 'Simulations' 
#    
# variant_dir = build_dir + '/' + project + '_'+mode 
#    
# SConscript(project +'/src/SConscript', variant_dir=variant_dir, duplicate=False, exports=['env','variant_dir'])